#!/usr/bin/env ruby
gem 'minitest', '>= 5.0.0'
require 'minitest/autorun'
require_relative 'alphametics'

# Test data version: <%= sha1 %>
class AlphameticsTest < Minitest::Test
<% test_cases.each do |test_case| %>
  def <%= test_case.test_name %>
    <%= test_case.skipped %>
    input = <%= test_case.input %>
    expected = <%= test_case.expect %>
    <%= test_case.workload %>
  end
<% end %>
  # These tests have been commented out due their long runtime.  If you are
  # interested in optimising your solution for speed these are a good tests to
  # try.
  #
  # def test_puzzle_with_eight_letters
  #   skip
  #   input = 'SEND + MORE == MONEY'
  #   expected = { 'D' => 7, 'E' => 5, 'M' => 1, 'N' => 6,
  #                'O' => 0, 'R' => 8, 'S' => 9, 'Y' => 2 }
  #   assert_equal expected, Alphametics.solve(input)
  # end

  # def test_puzzle_with_ten_letters
  #   skip
  #   input = 'AND + A + STRONG + OFFENSE + AS + A + GOOD == DEFENSE'
  #   expected = { 'A' => 5, 'D' => 3, 'E' => 4, 'F' => 7,
  #                'G' => 8, 'N' => 0, 'O' => 2, 'R' => 1,
  #                'S' => 6, 'T' => 9 }
  #   assert_equal expected, Alphametics.solve(input)
  # end

<%= IO.read(XRUBY_LIB + '/bookkeeping.md') %>
  def test_bookkeeping
    skip
    assert_equal <%= version.next %>, BookKeeping::VERSION
  end
end
